// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: parents.sql

package models

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const createParent = `-- name: CreateParent :exec
INSERT INTO parents
(id, first_name, last_name, birthday, rg_document, cpf_document, student_id, email, created_at, updated_at)
VALUES
($1,$2,$3,$4,$5,$6,$7,$8,$9,$10)
`

type CreateParentParams struct {
	ID          uuid.UUID      `json:"id"`
	FirstName   string         `json:"first_name"`
	LastName    string         `json:"last_name"`
	Birthday    time.Time      `json:"birthday"`
	RgDocument  sql.NullString `json:"rg_document"`
	CpfDocument string         `json:"cpf_document"`
	StudentID   uuid.UUID      `json:"student_id"`
	Email       string         `json:"email"`
	CreatedAt   sql.NullTime   `json:"created_at"`
	UpdatedAt   sql.NullTime   `json:"updated_at"`
}

// Active: 1691937846246@@127.0.0.1@9500@sistema-escolar
func (q *Queries) CreateParent(ctx context.Context, arg CreateParentParams) error {
	_, err := q.db.ExecContext(ctx, createParent,
		arg.ID,
		arg.FirstName,
		arg.LastName,
		arg.Birthday,
		arg.RgDocument,
		arg.CpfDocument,
		arg.StudentID,
		arg.Email,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	return err
}

const deleteParentsByStudent = `-- name: DeleteParentsByStudent :exec
UPDATE parents SET deleted_at = $1 WHERE student_id = $2
`

type DeleteParentsByStudentParams struct {
	DeletedAt sql.NullTime `json:"deleted_at"`
	StudentID uuid.UUID    `json:"student_id"`
}

func (q *Queries) DeleteParentsByStudent(ctx context.Context, arg DeleteParentsByStudentParams) error {
	_, err := q.db.ExecContext(ctx, deleteParentsByStudent, arg.DeletedAt, arg.StudentID)
	return err
}
